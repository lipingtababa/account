name: Provision infrastructures
run-name: Provisioning infra for ${{ github.repository }}
permissions:
    id-token: write
    contents: read
on: 
  # Deploy infrastructure for a new environment
  # Trigged by a manual action
  workflow_dispatch:
    inputs:
      AWS_REGION:
        description: 'AWS Region'
        required: true
        type: string
        default: 'us-east-1'
      AWS_ACCOUNT:
        description: 'AWS Account ID'
        required: true
        type: string
        default: '339713007259'
      STAGE:
        description: 'Stage of the cluster'
        required: true
        type: string
        default: 'dev'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get repo
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT }}:role/github-actions-admin
          role-session-name: github
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Prepare environment
        run: |
          echo ${{ inputs.AWS_REGION }}
          echo ${{ inputs.AWS_ACCOUNT }}
          echo ${{ inputs.STAGE }}

          # set environment variables for the next steps
          APP_NAME=`echo ${{ github.repository }} | cut -d'/' -f2`
          echo "APP_NAME=${APP_NAME}"
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV

          APP_VERSION=`echo ${{ github.sha }} | cut -c1-7`
          echo "APP_VERSION=${APP_VERSION}"
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV

      - name: push image to ECR
        run: |
          aws ecr get-login-password --region ${{ inputs.AWS_REGION }} | docker login --username AWS --password-stdin ${{ inputs.AWS_ACCOUNT }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com
          docker build -t ${APP_NAME} .
          docker tag ${APP_NAME}:latest ${{ inputs.AWS_ACCOUNT }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${APP_NAME}:${APP_VERSION}
          docker push                      ${{ inputs.AWS_ACCOUNT }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${APP_NAME}:${APP_VERSION}

      - name: Provision infrastructure
        run: |
          cd infrastructure/aws
          terraform init
          terraform apply -auto-approve \
                -var "aws_region=${{ inputs.AWS_REGION }}" \
                -var "aws_account=${{ inputs.AWS_ACCOUNT }}" \
                -var "stage=${{ inputs.STAGE }}" \
                -var "app_version=${APP_VERSION}" \
                -var "app_name=${APP_NAME}"
